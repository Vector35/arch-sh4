enum SH4_OPC {
	OPC_ADD=0, OPC_ADDC, OPC_ADDV, OPC_AND, OPC_BF, OPC_BRA, OPC_BRAF, OPC_BSR,
	OPC_BSRF, OPC_BT, OPC_CLRMAC, OPC_CLRS, OPC_CLRT, OPC_CMP, OPC_DIV0S,
	OPC_DIV0U, OPC_DIV1, OPC_DMULS, OPC_DMULU, OPC_DT, OPC_ERROR, OPC_EXTS,
	OPC_EXTU, OPC_FABS, OPC_FADD, OPC_FCMP, OPC_FCNVDS, OPC_FCNVSD, OPC_FDIV,
	OPC_FIPR, OPC_FLDI0, OPC_FLDI1, OPC_FLDS, OPC_FLOAT, OPC_FMAC, OPC_FMOV,
	OPC_FMUL, OPC_FNEG, OPC_FRCHG, OPC_FSCA, OPC_FSCHG, OPC_FSQRT, OPC_FSRRA,
	OPC_FSTS, OPC_FSUB, OPC_FTRC, OPC_FTRV, OPC_JMP, OPC_JSR, OPC_LDC, OPC_LDS,
	OPC_LDTLB, OPC_MAC, OPC_MOV, OPC_MOVA, OPC_MOVCA, OPC_MOVT, OPC_MUL, OPC_MULS,
	OPC_MULU, OPC_NEG, OPC_NEGC, OPC_NOP, OPC_NOT, OPC_OCBI, OPC_OCBP, OPC_OCBWB,
	OPC_OR, OPC_PREF, OPC_ROTCL, OPC_ROTCR, OPC_ROTL, OPC_ROTR, OPC_RTE, OPC_RTS,
	OPC_SETS, OPC_SETT, OPC_SHAD, OPC_SHAL, OPC_SHAR, OPC_SHLD, OPC_SHLL,
	OPC_SHLL16, OPC_SHLL2, OPC_SHLL8, OPC_SHLR, OPC_SHLR16, OPC_SHLR2, OPC_SHLR8,
	OPC_SLEEP, OPC_STC, OPC_STS, OPC_SUB, OPC_SUBC, OPC_SUBV, OPC_SWAP, OPC_TAS,
	OPC_TRAPA, OPC_TST, OPC_XOR, OPC_XTRCT
};

enum SH4_LEN_SUFFIX {
	LEN_SUFFIX_NONE=0, LEN_SUFFIX_B, LEN_SUFFIX_W, LEN_SUFFIX_L
};

struct disasm_result
{
	enum SH4_OPC opcode;
	enum SH4_LEN_SUFFIX length_suffix;
	char string[128];
};

int disasm(uint32_t addr, uint16_t insword, struct disasm_result *result);
