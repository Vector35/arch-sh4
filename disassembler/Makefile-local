# $ make -f Makefile-local

DECODE_OBJS = decode.o decode_spec.o decode_support.o

FORMAT_OBJS = format.o operations.o

HEADERS = superh.h format.h decode.h operations.h decode_support.h

#CFLAGS = -g -Wunused
#CFLAGS = -Os
#CFLAGS = -g -Wpedantic
CFLAGS = -g
#CFLAGS = -ofast

#$(info $(GENERATED_OBJECTS))

.PHONY: all clean

all: libdecode.a libformat.a gofer.so test

%.o: %.c $(HEADERS)
	gcc -c $(CFLAGS) $< -o $@

libdecode.a: $(DECODE_OBJS)
	ar rvs libdecode.a $(DECODE_OBJS)

libformat.a: $(FORMAT_OBJS)
	ar rvs libformat.a $(FORMAT_OBJS)

#------------------------------------------------------------------------------
# test tools
#------------------------------------------------------------------------------

gofer.so: gofer.c libdecode.a
	gcc $(CFLAGS) \
		libdecode.a libformat.a \
		-shared -o gofer.so gofer.c \
		-Wl,-headerpad_max_install_names
	#install_name_tool -change libcapstone.3.dylib gofer.so
	#install_name_tool -add_rpath `pwd` gofer.so

test: test.c libdecode.a
	gcc $(CFLAGS) test.c libdecode.a libformat.a -o test

#------------------------------------------------------------------------------
# 
#------------------------------------------------------------------------------
clean:
	rm -f *.o *.so *.a test
	rm -rf gofer.so.dSYM test.dSYM


